[{"/home/lenovo/Downloads/react-and-web3-demo-app-main/src/index.js":"1","/home/lenovo/Downloads/react-and-web3-demo-app-main/src/App.js":"2","/home/lenovo/Downloads/react-and-web3-demo-app-main/src/components/Login/Login.js":"3"},{"size":168,"mtime":1637936334000,"results":"4","hashOfConfig":"5"},{"size":2071,"mtime":1652277668821,"results":"6","hashOfConfig":"5"},{"size":1395,"mtime":1652264338065,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1wlaboz",{"filePath":"10","messages":"11","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},{"filePath":"13","messages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/lenovo/Downloads/react-and-web3-demo-app-main/src/index.js",[],"/home/lenovo/Downloads/react-and-web3-demo-app-main/src/App.js",["15","16"],"import { useState, useEffect } from \"react\";\nimport Login from \"./components/Login/Login\";\nimport Web3 from \"web3\";\n\nfunction App() {\n  const [isConnected, setIsConnected] = useState(false);\n  const [currentAccount, setCurrentAccount] = useState(null);\n  const [provider, setProvider] = useState(window.ethereum);\n  const [chainId, setChainId] = useState(null);\n  const [web3, setWeb3] = useState(null);\n\n\n\n  const onLogin = async (provider) => {\n    const web3 = new Web3(provider);\n    const accounts = await web3.eth.getAccounts();\n    const chainId = await web3.eth.getChainId();\n    if (accounts.length === 0) {\n      console.log(\"Please connect to MetaMask!\");\n    } else if (accounts[0] !== currentAccount) {\n    // setProvider(provider);\n    setWeb3(web3);\n      setChainId(chainId);\n      setCurrentAccount(accounts[0]);\n     setIsConnected(true);\n    }\n  };\n\n  useEffect(() => {\n    // for account change\n    const handleAccountsChanged = async (accounts) => {\n      const web3Accounts = await web3.eth.getAccounts();\n      if (web3Accounts.length === 0) {\n        onLogout();\n      } else if (web3Accounts[0] !== currentAccount) {\n        setCurrentAccount(web3Accounts[0]);\n      }\n    };\n// for chanin id network\n    const handleChainChanged = async (chainId) => {\n      const web3ChainId = await web3.eth.getChainId();\n      setChainId(web3ChainId);\n    };\n\n  //  if (isConnected) {\n      provider.on(\"accountsChanged\", handleAccountsChanged);\n      provider.on(\"chainChanged\", handleChainChanged);\n //   }\n  }, [isConnected]);\n//log\n  const onLogout = () => {\n    setIsConnected(false);\n    setCurrentAccount(null);\n    setChainId(null)\n  };\n\n\n\n  return (\n    <div>\n      <header className=\"main-header\">\n        <nav className=\"nav\">\n          <button className=\"center\" onClick={onLogout}> Logout</button>\n        </nav>\n      </header>\n      <main>\n        {!isConnected && <Login onLogin={onLogin} />}\n\n        <h1>Account address:{currentAccount}</h1>\n        <h1>Current Network Id:{chainId}</h1>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","/home/lenovo/Downloads/react-and-web3-demo-app-main/src/components/Login/Login.js",[],{"ruleId":"17","severity":1,"message":"18","line":8,"column":20,"nodeType":"19","messageId":"20","endLine":8,"endColumn":31},{"ruleId":"21","severity":1,"message":"22","line":49,"column":6,"nodeType":"23","endLine":49,"endColumn":19,"suggestions":"24"},"no-unused-vars","'setProvider' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'currentAccount', 'provider', and 'web3.eth'. Either include them or remove the dependency array.","ArrayExpression",["25"],{"desc":"26","fix":"27"},"Update the dependencies array to be: [currentAccount, isConnected, provider, web3.eth]",{"range":"28","text":"29"},[1526,1539],"[currentAccount, isConnected, provider, web3.eth]"]