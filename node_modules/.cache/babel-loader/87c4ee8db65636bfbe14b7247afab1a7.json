{"ast":null,"code":"var _jsxFileName = \"/home/lenovo/Downloads/react-and-web3-demo-app-main/src/components/Login/Login.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport Card from \"../UI/Card/Card\";\nimport classes from \"./Login.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = props => {\n  _s();\n\n  const [isConnecting, setIsConnecting] = useState(false);\n  const [provider, setProvider] = useState(window.ethereum);\n  const [isMetaMaskInstalled, setIsMetaMaskInstalled] = useState(false);\n  useEffect(() => {\n    if (provider) {\n      if (provider !== window.ethereum) {\n        alert(\"Not window.ethereum provider\");\n      }\n\n      setIsMetaMaskInstalled(true);\n    }\n  }, [provider]);\n\n  const detectProvider = () => {\n    let provider;\n\n    if (window.ethereum) {\n      provider = window.ethereum;\n    } else if (window.web3) {\n      provider = window.web3.currentProvider;\n    } else {\n      alert(\"No Ethereum browser detected! Check out MetaMask\");\n    }\n\n    return provider;\n  };\n\n  const onLoginHandler = async () => {\n    setIsConnecting(true);\n    await provider.request({\n      method: \"eth_requestAccounts\"\n    });\n    setIsConnecting(false);\n    props.onLogin(provider);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: [isMetaMaskInstalled && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onLoginHandler,\n      className: classes.button,\n      type: \"button\",\n      children: [!isConnecting && \"Connect\", isConnecting && \"Loading...\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), !isMetaMaskInstalled && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/\",\n        children: \"Install MetaMask\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"2KbhUOqKZKQGrFa+0f9/bHH8Z1w=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useState","useEffect","Card","classes","Login","props","isConnecting","setIsConnecting","provider","setProvider","window","ethereum","isMetaMaskInstalled","setIsMetaMaskInstalled","alert","detectProvider","web3","currentProvider","onLoginHandler","request","method","onLogin","login","button"],"sources":["/home/lenovo/Downloads/react-and-web3-demo-app-main/src/components/Login/Login.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport Card from \"../UI/Card/Card\";\nimport classes from \"./Login.module.css\";\n\nconst Login = (props) => {\n  const [isConnecting, setIsConnecting] = useState(false);\n  const [provider, setProvider] = useState(window.ethereum);\n  const [isMetaMaskInstalled, setIsMetaMaskInstalled] = useState(false);\n\n \n\n  useEffect(() => {\n    if (provider) {\n      if (provider !== window.ethereum) {\n       alert(\n          \"Not window.ethereum provider\"\n        );\n      }\n      setIsMetaMaskInstalled(true);\n    }\n  }, [provider]);\n\n  const detectProvider = () => {\n    let provider;\n    if (window.ethereum) {\n      provider = window.ethereum;\n    } else if (window.web3) {\n      provider = window.web3.currentProvider;\n    } else {\n     alert(\"No Ethereum browser detected! Check out MetaMask\");\n    }\n    return provider;\n  };\n\n  const onLoginHandler = async () => {\n    setIsConnecting(true);\n    await provider.request({\n      method: \"eth_requestAccounts\",\n    });\n    setIsConnecting(false);\n    props.onLogin(provider);\n  };\n\n  return (\n    <Card className={classes.login}>\n      {isMetaMaskInstalled && (\n        <button\n          onClick={onLoginHandler}\n          className={classes.button}\n          type=\"button\"\n        >\n          {!isConnecting && \"Connect\"}\n          {isConnecting && \"Loading...\"}\n        </button>\n      )}\n      {!isMetaMaskInstalled && (\n        <p>\n          <a href=\"/\">Install MetaMask</a>\n        </p>\n      )}\n    </Card>\n  );\n};\n\nexport default Login;\n"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,OAAOC,OAAP,MAAoB,oBAApB;;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;EAAA;;EACvB,MAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,KAAD,CAAhD;EACA,MAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAACU,MAAM,CAACC,QAAR,CAAxC;EACA,MAAM,CAACC,mBAAD,EAAsBC,sBAAtB,IAAgDb,QAAQ,CAAC,KAAD,CAA9D;EAIAC,SAAS,CAAC,MAAM;IACd,IAAIO,QAAJ,EAAc;MACZ,IAAIA,QAAQ,KAAKE,MAAM,CAACC,QAAxB,EAAkC;QACjCG,KAAK,CACF,8BADE,CAAL;MAGA;;MACDD,sBAAsB,CAAC,IAAD,CAAtB;IACD;EACF,CATQ,EASN,CAACL,QAAD,CATM,CAAT;;EAWA,MAAMO,cAAc,GAAG,MAAM;IAC3B,IAAIP,QAAJ;;IACA,IAAIE,MAAM,CAACC,QAAX,EAAqB;MACnBH,QAAQ,GAAGE,MAAM,CAACC,QAAlB;IACD,CAFD,MAEO,IAAID,MAAM,CAACM,IAAX,EAAiB;MACtBR,QAAQ,GAAGE,MAAM,CAACM,IAAP,CAAYC,eAAvB;IACD,CAFM,MAEA;MACNH,KAAK,CAAC,kDAAD,CAAL;IACA;;IACD,OAAON,QAAP;EACD,CAVD;;EAYA,MAAMU,cAAc,GAAG,YAAY;IACjCX,eAAe,CAAC,IAAD,CAAf;IACA,MAAMC,QAAQ,CAACW,OAAT,CAAiB;MACrBC,MAAM,EAAE;IADa,CAAjB,CAAN;IAGAb,eAAe,CAAC,KAAD,CAAf;IACAF,KAAK,CAACgB,OAAN,CAAcb,QAAd;EACD,CAPD;;EASA,oBACE,QAAC,IAAD;IAAM,SAAS,EAAEL,OAAO,CAACmB,KAAzB;IAAA,WACGV,mBAAmB,iBAClB;MACE,OAAO,EAAEM,cADX;MAEE,SAAS,EAAEf,OAAO,CAACoB,MAFrB;MAGE,IAAI,EAAC,QAHP;MAAA,WAKG,CAACjB,YAAD,IAAiB,SALpB,EAMGA,YAAY,IAAI,YANnB;IAAA;MAAA;MAAA;MAAA;IAAA,QAFJ,EAWG,CAACM,mBAAD,iBACC;MAAA,uBACE;QAAG,IAAI,EAAC,GAAR;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAZJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAmBD,CA1DD;;GAAMR,K;;KAAAA,K;AA4DN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}